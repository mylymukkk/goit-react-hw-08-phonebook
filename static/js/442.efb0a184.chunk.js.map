{"version":3,"file":"static/js/442.efb0a184.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx","webpack://react-homework-template/./src/common/form.module.css?cbdc","webpack://react-homework-template/./src/common/formPages.module.css?4167"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = state => {\n  const contacts = selectContacts(state);\n  return contacts.filter(contact => {\n    return contact.name.toLowerCase().includes(state.filter.toLowerCase());\n  });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactListItem_item__UAAix\",\"phoneNumber\":\"ContactListItem_phoneNumber__ogkBd\",\"deleteBtn\":\"ContactListItem_deleteBtn__roUYm\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { HiX } from 'react-icons/hi';\n\nimport { deleteContact } from 'redux/contacts/operations';\nimport css from './ContactListItem.module.css';\n\nexport const ContactListItem = ({ contact }) => {\n  const { name, number, id } = contact;\n\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <li className={css.item}>\n      <button className={css.deleteBtn} type=\"button\" onClick={handleDelete}>\n        <HiX />\n      </button>\n      {name}:&nbsp;<span className={css.phoneNumber}>{number}</span>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ContactList_contactsList__7leRd\",\"noContactsText\":\"ContactList_noContactsText__oNRub\"};","import { useSelector } from 'react-redux';\n\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\n\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  if (filteredContacts.length > 0) {\n    return (\n      <ul className={css.contactsList}>\n        {filteredContacts.map(contact => (\n          <ContactListItem key={contact.id} contact={contact} />\n        ))}\n      </ul>\n    );\n  }\n};\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { notificationInfo } from 'components/Notification/Notification';\n\nimport css from 'common/form.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const nameValue = form.elements.name.value;\n    const numberValue = form.elements.number.value;\n\n    contacts.find(\n      ({ name, number }) =>\n        name.toLowerCase() === nameValue.toLowerCase() && number === numberValue\n    )\n      ? notificationInfo(nameValue)\n      : dispatch(addContact({ name: nameValue, number: numberValue }));\n    form.reset();\n  };\n\n  return (\n    <>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <label className={css.inputLabel} htmlFor=\"name\">\n          Name\n        </label>\n        <input\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Tom Holland\"\n          className={css.input}\n        />\n        <label className={css.inputLabel} htmlFor=\"phone\">\n          Phone number\n        </label>\n        <input\n          id=\"phone\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          className={css.input}\n          placeholder=\"999-99-99\"\n        />\n        <button type=\"submit\" className={css.formBtn}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import { useDispatch } from 'react-redux';\n\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onFilterChanged = filter => {\n    dispatch(setFilter(filter));\n  };\n\n  return (\n    <div className={css.filter}>\n      <label className={css.filterLabel} htmlFor=\"findByName\">\n        Find contacts by name\n      </label>\n      <input\n        className={css.filterInput}\n        type=\"text\"\n        id=\"findByName\"\n        onChange={e => onFilterChanged(e.target.value)}\n      />\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { ThreeDots } from 'react-loader-spinner';\n\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading, selectError } from 'redux/contacts/selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\n\nimport css from 'common/formPages.module.css';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.wrapper}>\n      <h1 className={css.mainTitle}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={css.sectionTitle}>Contacts</h2>\n      <Filter />\n      {isLoading && !error && (\n        <ThreeDots color=\"#1976d2\" width=\"30\" height=\"30\" />\n      )}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"form_form__zWqaf\",\"inputLabel\":\"form_inputLabel__QITtR\",\"input\":\"form_input__VQfq4\",\"formBtn\":\"form_formBtn__ik9wX\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"formPages_wrapper__Bmv8E\",\"mainTitle\":\"formPages_mainTitle__zcr5H\",\"sectionTitle\":\"formPages_sectionTitle__3Pzjx\",\"text\":\"formPages_text__EKLlW\"};"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","filter","contact","name","toLowerCase","includes","ContactListItem","number","id","dispatch","useDispatch","className","css","type","onClick","deleteContact","ContactList","filteredContacts","useSelector","length","map","ContactForm","onSubmit","e","preventDefault","form","target","nameValue","elements","value","numberValue","find","notificationInfo","addContact","reset","htmlFor","pattern","title","required","placeholder","Filter","onChange","setFilter","useEffect","fetchContacts","color","width","height"],"sourceRoot":""}